<!DOCTYPE html>
<html lang="ko">

<head>
	<meta charset="UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>AJAX</title>
</head>

<body>
	<h1>AJAX</h1>
	<p>
		AJAX는 Asynchronous JavaScript and XML의 약자로,
		말 그대로 JavaScript와 XML을 이용한 비동기적 정보 교환 기법(데이터 통신)이다.
	</p>
	<button id="bt1">클릭!</button>
	<button id="bt2">클릭!</button>
	<button id="bt3">클릭!</button>
	<script>
		// then으로 내용 받고, then으로 받아오는 로직이 불편하다면, async로 사용 🙆🏻‍♀️
		document.querySelector("#bt3").onclick = async function (evt){
			let response = await fetch('/api/dest', {method:'get'});
			// let txt = await response.text();
			// console.log(txt)
			let obj = await response.json();	// 응답의 결과를 json으로 받으면
			console.log(obj, typeof obj);	// 객체로 반환
		};
		
		// xhr 대신 fetch 🙆🏻‍♀️
		document.querySelector("#bt2").onclick = (evt)=>{
			// fetch 👉 요청 method를 다 사용할 수 있다
			fetch('/api/dest', {method : 'get'})
			.then(res => {	// 요청 받아와서
				// console.log(res);
				return resp.text();
			})
			.then(result => {	// 출력
				console.log(result)
			})
			.catch(err => {
				conosle.log(err)
			})
		};

		// 구버전으로 xml 사용 🙅🏻‍♀️
		document.querySelector("#bt1").onclick = (evt) => {
			let xhr = new XMLHttpRequest();
			xhr.open("get", "/api/dest");
			xhr.onload = function (req, evt) {
				console.log("load ", req.target.response);
			}
			xhr.onerror = function (req, evt) {
				console.log("error ", req);
			}
			xhr.send();
			console.log("send 완료");
		};

	</script>
</body>

</html>